{"ast":null,"code":"var _jsxFileName = \"/Users/pradyumnateja/Desktop/flywireassessment/PradyumanaTejaNS-flywire-exercise/reactfrontend/src/components/AddEmployeeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './AddEmployeeForm.css';\nimport ErrorModal from './ErrorModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddEmployeeForm = ({\n  onSubmit,\n  onCancel,\n  employees\n}) => {\n  _s();\n  const [showErrorModal, setShowErrorModal] = useState(false);\n  const getMaxDate = () => {\n    const now = new Date();\n    return now.toISOString().split('T')[0];\n  };\n  const getMinDate = () => {\n    return '1925-04-13';\n  };\n  const handleDateChange = e => {\n    const selectedDate = e.target.value;\n    if (selectedDate > getMaxDate()) {\n      setValidationError('Hire date cannot be in the future');\n      setShowErrorModal(true);\n      e.target.value = getMaxDate();\n      handleChange({\n        ...e,\n        target: {\n          ...e.target,\n          value: getMaxDate()\n        }\n      });\n      return;\n    }\n    handleChange(e);\n  };\n  const [formData, setFormData] = useState({\n    id: '',\n    firstName: '',\n    lastName: '',\n    position: '',\n    hireDate: '',\n    directReports: [],\n    managerId: ''\n  });\n\n  // Sort employees by name for the dropdown\n  const sortedEmployees = [...(employees || [])].sort((a, b) => a.name.localeCompare(b.name));\n  const [validationError, setValidationError] = useState(null);\n  const clearError = () => {\n    setValidationError(null);\n    setShowErrorModal(false);\n  };\n  const handleChange = e => {\n    clearError();\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'select-multiple' ? Array.from(e.target.selectedOptions).map(option => parseInt(option.value, 10)) : value\n    }));\n    clearError();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setValidationError(null);\n    // Validate required fields\n    if (!formData.id.trim()) {\n      setValidationError(\"Employee ID is required\");\n      setShowErrorModal(true);\n      return;\n    }\n    if (!formData.firstName.trim() || !formData.lastName.trim()) {\n      setValidationError(\"Both first and last names are required\");\n      setShowErrorModal(true);\n      return;\n    }\n    if (!formData.position.trim()) {\n      setValidationError(\"Position is required\");\n      setShowErrorModal(true);\n      return;\n    }\n    if (!formData.managerId) {\n      setValidationError(\"Manager is required\");\n      setShowErrorModal(true);\n      return;\n    }\n\n    // Validate ID is unique\n    const employeeId = parseInt(formData.id, 10);\n    if (isNaN(employeeId)) {\n      setValidationError(\"Employee ID must be a valid number\");\n      setShowErrorModal(true);\n      return;\n    }\n\n    // Check for duplicate ID\n    const isDuplicate = employees.some(emp => emp.id === employeeId);\n    if (isDuplicate) {\n      setValidationError(`Employee ID ${employeeId} is already in use. Please choose a different ID.`);\n      setShowErrorModal(true);\n      return;\n    }\n\n    // Convert date from YYYY-MM-DD to MM/dd/yyyy format while preserving the actual date\n    console.log('Original hire date:', formData.hireDate);\n    // Split the date directly instead of using Date object to avoid timezone issues\n    const [year, month, day] = formData.hireDate.split('-');\n    const formattedDate = `${month}/${day}/${year}`;\n    console.log('Formatted hire date:', formattedDate);\n\n    // Validate direct reports if any are selected\n    if (formData.directReports.length > 0) {\n      const invalidReports = formData.directReports.filter(id => !employees.some(e => e.id === id));\n      if (invalidReports.length > 0) {\n        setValidationError(`The following direct report IDs do not exist: ${invalidReports.join(', ')}`);\n        setShowErrorModal(true);\n        return;\n      }\n    }\n    const employeeData = {\n      id: parseInt(formData.id, 10),\n      // Use the ID entered by the user\n      name: `${formData.firstName} ${formData.lastName}`,\n      position: formData.position,\n      hireDate: formattedDate,\n      active: true,\n      directReports: formData.directReports || [],\n      // Ensure directReports is always an array\n      managerId: parseInt(formData.managerId, 10)\n    };\n\n    // console.log('Employee data:', employeeData);\n\n    // If managerId is NaN, set it to null\n    if (isNaN(employeeData.managerId)) {\n      employeeData.managerId = null;\n    }\n\n    // Remove managerId from the employee object, as it's passed separately\n    try {\n      const {\n        managerId,\n        ...employee\n      } = employeeData;\n      await onSubmit(employee, managerId);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Handle backend validation errors\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'An error occurred while adding the employee';\n      setValidationError(errorMessage);\n      setShowErrorModal(true);\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [validationError && showErrorModal && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      message: validationError,\n      onClose: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add New Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onCancel,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"firstName\",\n                name: \"firstName\",\n                value: formData.firstName,\n                onChange: handleChange,\n                placeholder: \"Pradyumna Teja\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"lastName\",\n                name: \"lastName\",\n                value: formData.lastName,\n                onChange: handleChange,\n                placeholder: \"Smith\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"position\",\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"position\",\n                name: \"position\",\n                value: formData.position,\n                onChange: handleChange,\n                placeholder: \"Software Engineer\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"hireDate\",\n                children: \"Hire Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"hireDate\",\n                name: \"hireDate\",\n                value: formData.hireDate,\n                onChange: handleDateChange,\n                min: getMinDate(),\n                max: getMaxDate(),\n                onKeyDown: e => e.preventDefault(),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"id\",\n                children: \"Employee ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"id\",\n                name: \"id\",\n                value: formData.id,\n                onChange: handleChange,\n                placeholder: \"Enter a unique ID\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"directReports\",\n                children: \"Direct Reports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"directReports\",\n                name: \"directReports\",\n                multiple: true,\n                value: formData.directReports,\n                onChange: handleChange,\n                children: sortedEmployees.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: emp.id,\n                  children: [emp.name, \" - \", emp.position]\n                }, emp.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"form-text\",\n                children: \"Hold Ctrl/Cmd to select multiple employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"managerId\",\n                children: \"Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"managerId\",\n                name: \"managerId\",\n                value: formData.managerId,\n                onChange: handleChange,\n                required: true,\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a manager\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 17\n                }, this), sortedEmployees.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: emp.id,\n                  children: [emp.name, \" (ID: \", emp.id, \")\"]\n                }, emp.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 19\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: onCancel,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"primary-btn\",\n                children: \"Add Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AddEmployeeForm, \"TKm6CMx4MsKykR1L77GhZtjAaUU=\");\n_c = AddEmployeeForm;\nexport default AddEmployeeForm;\nvar _c;\n$RefreshReg$(_c, \"AddEmployeeForm\");","map":{"version":3,"names":["React","useState","ErrorModal","jsxDEV","_jsxDEV","Fragment","_Fragment","AddEmployeeForm","onSubmit","onCancel","employees","_s","showErrorModal","setShowErrorModal","getMaxDate","now","Date","toISOString","split","getMinDate","handleDateChange","e","selectedDate","target","value","setValidationError","handleChange","formData","setFormData","id","firstName","lastName","position","hireDate","directReports","managerId","sortedEmployees","sort","a","b","name","localeCompare","validationError","clearError","type","prev","Array","from","selectedOptions","map","option","parseInt","handleSubmit","preventDefault","trim","employeeId","isNaN","isDuplicate","some","emp","console","log","year","month","day","formattedDate","length","invalidReports","filter","join","employeeData","active","employee","error","_error$response","_error$response$data","errorMessage","response","data","message","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","htmlFor","onChange","placeholder","required","min","max","onKeyDown","multiple","_c","$RefreshReg$"],"sources":["/Users/pradyumnateja/Desktop/flywireassessment/PradyumanaTejaNS-flywire-exercise/reactfrontend/src/components/AddEmployeeForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './AddEmployeeForm.css';\nimport ErrorModal from './ErrorModal';\n\nconst AddEmployeeForm = ({ onSubmit, onCancel, employees }) => {\n  const [showErrorModal, setShowErrorModal] = useState(false);\n  const getMaxDate = () => {\n    const now = new Date();\n    return now.toISOString().split('T')[0];\n  };\n\n  const getMinDate = () => {\n    return '1925-04-13';\n  };\n  \n  const handleDateChange = (e) => {\n    const selectedDate = e.target.value;\n    \n    if (selectedDate > getMaxDate()) {\n      setValidationError('Hire date cannot be in the future');\n      setShowErrorModal(true);\n      e.target.value = getMaxDate();\n      handleChange({ ...e, target: { ...e.target, value: getMaxDate() } });\n      return;\n    }\n    handleChange(e);\n  };\n  \n  const [formData, setFormData] = useState({\n    id: '',\n    firstName: '',\n    lastName: '',\n    position: '',\n    hireDate: '',\n\n    directReports: [],\n    managerId: ''\n  });\n\n  // Sort employees by name for the dropdown\n  const sortedEmployees = [...(employees || [])].sort((a, b) => \n    a.name.localeCompare(b.name)\n  );\n  \n  const [validationError, setValidationError] = useState(null);\n  const clearError = () => {\n    setValidationError(null);\n    setShowErrorModal(false);\n  };\n  \n  const handleChange = (e) => {\n    clearError();\n    const { name, value, type } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'select-multiple' \n        ? Array.from(e.target.selectedOptions).map(option => parseInt(option.value, 10))\n        : value\n    }));\n    clearError();\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setValidationError(null);\n    // Validate required fields\n    if (!formData.id.trim()) {\n      setValidationError(\"Employee ID is required\");\n      setShowErrorModal(true);\n      return;\n    }\n\n    if (!formData.firstName.trim() || !formData.lastName.trim()) {\n      setValidationError(\"Both first and last names are required\");\n      setShowErrorModal(true);\n      return;\n    }\n\n    if (!formData.position.trim()) {\n      setValidationError(\"Position is required\");\n      setShowErrorModal(true);\n      return;\n    }\n\n    if (!formData.managerId) {\n      setValidationError(\"Manager is required\");\n      setShowErrorModal(true);\n      return;\n    }\n\n    // Validate ID is unique\n    const employeeId = parseInt(formData.id, 10);\n    if (isNaN(employeeId)) {\n      setValidationError(\"Employee ID must be a valid number\");\n      setShowErrorModal(true);\n      return;\n    }\n\n    // Check for duplicate ID\n    const isDuplicate = employees.some(emp => emp.id === employeeId);\n    if (isDuplicate) {\n      setValidationError(`Employee ID ${employeeId} is already in use. Please choose a different ID.`);\n      setShowErrorModal(true);\n      return;\n    }\n    \n    // Convert date from YYYY-MM-DD to MM/dd/yyyy format while preserving the actual date\n    console.log('Original hire date:', formData.hireDate);\n    // Split the date directly instead of using Date object to avoid timezone issues\n    const [year, month, day] = formData.hireDate.split('-');\n    const formattedDate = `${month}/${day}/${year}`;\n    console.log('Formatted hire date:', formattedDate);\n    \n    // Validate direct reports if any are selected\n    if (formData.directReports.length > 0) {\n      const invalidReports = formData.directReports.filter(\n        id => !employees.some(e => e.id === id)\n      );\n      if (invalidReports.length > 0) {\n        setValidationError(\n          `The following direct report IDs do not exist: ${invalidReports.join(', ')}`\n        );\n        setShowErrorModal(true);\n        return;\n      }\n    }\n\n    const employeeData = {\n      id: parseInt(formData.id, 10),  // Use the ID entered by the user\n      name: `${formData.firstName} ${formData.lastName}`,\n      position: formData.position,\n      hireDate: formattedDate,\n      active: true,\n      directReports: formData.directReports || [],  // Ensure directReports is always an array\n      managerId: parseInt(formData.managerId, 10)\n    };\n\n    // console.log('Employee data:', employeeData);\n    \n    // If managerId is NaN, set it to null\n    if (isNaN(employeeData.managerId)) {\n      employeeData.managerId = null;\n    }\n    \n    // Remove managerId from the employee object, as it's passed separately\n    try {\n      const { managerId, ...employee } = employeeData;\n      await onSubmit(employee, managerId);\n    } catch (error) {\n      // Handle backend validation errors\n      const errorMessage = error.response?.data?.message || error.message || 'An error occurred while adding the employee';\n      setValidationError(errorMessage);\n      setShowErrorModal(true);\n      return;\n    }\n  };\n  \n  return (\n    <>\n      {validationError && showErrorModal && (\n        <ErrorModal\n          message={validationError}\n          onClose={clearError}\n        />\n      )}\n      <div className=\"modal-overlay\">\n        <div className=\"modal\">\n          <div className=\"modal-header\">\n            <h2>Add New Employee</h2>\n            <button type=\"button\" onClick={onCancel}>&times;</button>\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input\n                type=\"text\"\n                id=\"firstName\"\n                name=\"firstName\"\n                value={formData.firstName}\n                onChange={handleChange}\n                placeholder=\"Pradyumna Teja\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input\n                type=\"text\"\n                id=\"lastName\"\n                name=\"lastName\"\n                value={formData.lastName}\n                onChange={handleChange}\n                placeholder=\"Smith\"\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"position\">Position</label>\n              <input\n                type=\"text\"\n                id=\"position\"\n                name=\"position\"\n                value={formData.position}\n                onChange={handleChange}\n                placeholder=\"Software Engineer\"\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"hireDate\">Hire Date</label>\n              <input\n                type=\"date\"\n                id=\"hireDate\"\n                name=\"hireDate\"\n                value={formData.hireDate}\n                onChange={handleDateChange}\n                min={getMinDate()}\n                max={getMaxDate()}\n                onKeyDown={(e) => e.preventDefault()}\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"id\">Employee ID</label>\n              <input\n                type=\"number\"\n                id=\"id\"\n                name=\"id\"\n                value={formData.id}\n                onChange={handleChange}\n                placeholder=\"Enter a unique ID\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"directReports\">Direct Reports</label>\n              <select\n                id=\"directReports\"\n                name=\"directReports\"\n                multiple\n                value={formData.directReports}\n                onChange={handleChange}\n              >\n                {sortedEmployees.map(emp => (\n                  <option key={emp.id} value={emp.id}>\n                    {emp.name} - {emp.position}\n                  </option>\n                ))}\n              </select>\n              <small className=\"form-text\">Hold Ctrl/Cmd to select multiple employees</small>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"managerId\">Manager</label>\n              <select\n                id=\"managerId\"\n                name=\"managerId\"\n                value={formData.managerId}\n                onChange={handleChange}\n                required\n                className=\"form-control\"\n              >\n                <option value=\"\">Select a manager</option>\n                {sortedEmployees.map(emp => (\n                  <option key={emp.id} value={emp.id}>\n                    {emp.name} (ID: {emp.id})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button type=\"button\" onClick={onCancel}>\n                Cancel\n              </button>\n              <button type=\"submit\" className=\"primary-btn\">\n                Add Employee\n              </button>\n            </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddEmployeeForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}