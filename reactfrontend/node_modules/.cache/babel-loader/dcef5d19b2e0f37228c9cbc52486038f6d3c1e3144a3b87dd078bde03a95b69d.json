{"ast":null,"code":"var _jsxFileName = \"/Users/pradyumnateja/Desktop/flywireassessment/PradyumanaTejaNS-flywire-exercise/reactfrontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EmployeeTable from './components/EmployeeTable';\nimport EmployeeDetails from './components/EmployeeDetails';\nimport AddEmployeeForm from './components/AddEmployeeForm';\nimport OperationButtons from './components/OperationButtons';\nimport EmployeeService from './services/EmployeeService';\nimport LoginScreen from './components/LoginScreen';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [loadingEmployeeId, setLoadingEmployeeId] = useState(null);\n  const [dateRange, setDateRange] = useState({\n    startDate: null,\n    endDate: null\n  });\n  const [notification, setNotification] = useState({\n    show: false,\n    message: '',\n    type: 'success'\n  });\n\n  // Fetch employees on component mount and filter change\n  useEffect(() => {\n    fetchEmployees();\n  }, [filter, dateRange.startDate, dateRange.endDate]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getToday = () => '2025-04-13';\n  const getMinDate = () => '1925-04-13';\n\n  // Function to fetch employees\n  const fetchEmployees = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      let data;\n      if (dateRange.startDate && dateRange.endDate) {\n        // Validate dates before fetching\n        const today = getToday();\n        const minDate = getMinDate();\n        if (dateRange.startDate > today || dateRange.endDate > today) {\n          setError('Cannot search with future dates');\n          setLoading(false);\n          return;\n        }\n        if (dateRange.startDate < minDate || dateRange.endDate < minDate) {\n          setError('Dates cannot be more than 100 years in the past');\n          setLoading(false);\n          return;\n        }\n        if (dateRange.startDate > dateRange.endDate) {\n          setError('Start date must be before or equal to end date');\n          setLoading(false);\n          return;\n        }\n\n        // If date range is valid, fetch by date range\n        console.log('Fetching with date range:', dateRange);\n        data = await EmployeeService.getEmployeesByHireDate(dateRange.startDate, dateRange.endDate);\n      } else {\n        // Get employees based on active/inactive filter\n        if (filter === 'active') {\n          data = await EmployeeService.getActiveEmployees();\n        } else {\n          data = await EmployeeService.getAllEmployees();\n          // Filter for inactive if needed\n          if (filter === 'inactive') {\n            data = data.filter(employee => !employee.active);\n          }\n        }\n      }\n      if (data) {\n        setEmployees(data);\n        setError(null); // Clear any previous errors if data is received successfully\n      }\n    } catch (err) {\n      var _err$response;\n      console.error('Error fetching employees:', err);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        // Don't show error for 400 Bad Request (expected when dates are invalid)\n        setEmployees([]);\n      } else {\n        var _err$response2, _err$response2$data;\n        setError(`Failed to load employees. ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to view employee details\n  const handleViewDetails = async id => {\n    try {\n      const details = await EmployeeService.getEmployeeDetails(id);\n      setSelectedEmployee(details);\n    } catch (err) {\n      console.error('Error fetching employee details:', err);\n\n      // Handle resourceFile read issues with client-side fallback\n      const employee = employees.find(emp => emp.id === id);\n      if (employee) {\n        // Create a simulated response with the data we have\n        const simulatedDetails = {\n          employee: employee,\n          directHires: employees.filter(emp => {\n            var _employee$directRepor;\n            return ((_employee$directRepor = employee.directReports) === null || _employee$directRepor === void 0 ? void 0 : _employee$directRepor.includes(emp.id)) || false;\n          })\n        };\n        setSelectedEmployee(simulatedDetails);\n        showNotification(\"Using local data due to backend limitations. Direct reports may not be accurate.\", \"warning\");\n      } else {\n        setError(`Failed to load employee details: ${err.message}`);\n      }\n    }\n  };\n\n  // Function to handle employee status change\n  const handleStatusChange = async (id, currentStatus) => {\n    try {\n      setLoadingEmployeeId(id);\n\n      // Call the appropriate service method\n      if (currentStatus) {\n        await EmployeeService.deactivateEmployee(id);\n      } else {\n        await EmployeeService.activateEmployee(id);\n      }\n      setEmployees(prevEmployees => prevEmployees.map(emp => emp.id === id ? {\n        ...emp,\n        active: !currentStatus\n      } : emp));\n      showNotification(`Employee ${currentStatus ? 'deactivated' : 'activated'} successfully`);\n      if (selectedEmployee && selectedEmployee.employee.id === id) {\n        const details = await EmployeeService.getEmployeeDetails(id);\n        setSelectedEmployee(details);\n      }\n      fetchEmployees();\n    } catch (err) {\n      console.error('Error changing employee status:', err);\n      showNotification(err.message, 'error');\n    } finally {\n      setLoadingEmployeeId(null);\n    }\n  };\n  const handleDeleteEmployee = async id => {\n    console.log('Delete requested for employee ID:', id);\n    if (!window.confirm('Are you sure you want to delete this employee?')) {\n      console.log('Delete cancelled by user for employee ID:', id);\n      return;\n    }\n    try {\n      console.log('Starting delete process for employee ID:', id);\n      setLoadingEmployeeId(id); // Show loading state\n      await EmployeeService.deleteEmployee(id);\n      console.log('Successfully deleted employee ID:', id);\n      await fetchEmployees(); // Refresh the list\n      showNotification('Employee deleted successfully');\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response3$data$m;\n      console.error('Error in handleDeleteEmployee:', err);\n      if ((_err$response3 = err.response) !== null && _err$response3 !== void 0 && (_err$response3$data = _err$response3.data) !== null && _err$response3$data !== void 0 && (_err$response3$data$m = _err$response3$data.message) !== null && _err$response3$data$m !== void 0 && _err$response3$data$m.includes('Cannot delete original employees')) {\n        showNotification('Cannot delete original employees', 'error');\n      } else {\n        showNotification(`Failed to delete employee: ${err.message}`, 'error');\n      }\n    } finally {\n      setLoadingEmployeeId(null); // Clear loading state\n    }\n  };\n  const handleAddEmployee = async (employee, managerId) => {\n    try {\n      // Check if ID is unique\n      const allEmployees = await EmployeeService.getAllEmployees();\n      if (allEmployees.some(e => e.id === employee.id)) {\n        showNotification(`Employee ID ${employee.id} already exists`, 'error');\n        return;\n      }\n\n      // Validate direct reports if provided\n      if (employee.directReports.length > 0) {\n        const invalidReports = employee.directReports.filter(id => !allEmployees.some(e => e.id === id));\n        if (invalidReports.length > 0) {\n          showNotification(`The following direct report IDs do not exist: ${invalidReports.join(', ')}`, 'error');\n          return;\n        }\n      }\n      const newEmployee = await EmployeeService.createEmployee(employee, managerId);\n      setShowAddForm(false);\n      fetchEmployees();\n      showNotification(`Employee ${newEmployee.name} added successfully`);\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error('Error adding employee:', err);\n      const errorMessage = ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message;\n      throw new Error(errorMessage); // Re-throw for form handling\n    }\n  };\n  const showNotification = (message, type = 'success') => {\n    setNotification({\n      show: true,\n      message,\n      type\n    });\n    setTimeout(() => {\n      setNotification(prev => ({\n        ...prev,\n        show: false\n      }));\n    }, 5000);\n  };\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(LoginScreen, {\n      onLogin: () => setIsLoggedIn(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Employee Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'all' ? 'active' : ''}`,\n            onClick: () => {\n              setFilter('all');\n              setDateRange({\n                startDate: null,\n                endDate: null\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), \" All Employees\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'active' ? 'active' : ''}`,\n            onClick: () => {\n              setFilter('active');\n              setDateRange({\n                startDate: null,\n                endDate: null\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), \" Active Employees\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'inactive' ? 'active' : ''}`,\n            onClick: () => {\n              setFilter('inactive');\n              setDateRange({\n                startDate: null,\n                endDate: null\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), \" Inactive Employees\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsLoggedIn(false),\n          className: \"logout-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-sign-out-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), \" Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), notification.show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type}`,\n      children: [notification.message, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setNotification(prev => ({\n          ...prev,\n          show: false\n        })),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading employees...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(OperationButtons, {\n        onDateSearch: (startDate, endDate) => {\n          setDateRange({\n            startDate,\n            endDate\n          });\n          fetchEmployees();\n        },\n        onStatusChange: handleStatusChange,\n        onSort: direction => {\n          const sortedEmployees = [...employees].sort((a, b) => {\n            const lastNameA = a.name.split(' ').pop();\n            const lastNameB = b.name.split(' ').pop();\n            return direction === 'asc' ? lastNameA.localeCompare(lastNameB) : lastNameB.localeCompare(lastNameA);\n          });\n          setEmployees(sortedEmployees);\n        },\n        onViewDetails: handleViewDetails,\n        onDelete: handleDeleteEmployee,\n        onAddEmployee: () => setShowAddForm(true),\n        employees: employees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EmployeeTable, {\n        employees: employees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"refresh-section\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"refresh-btn\",\n          onClick: fetchEmployees,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-sync-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), \" Refresh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), selectedEmployee && /*#__PURE__*/_jsxDEV(EmployeeDetails, {\n      employeeDetails: selectedEmployee,\n      onClose: () => setSelectedEmployee(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(AddEmployeeForm, {\n      onSubmit: handleAddEmployee,\n      onCancel: () => setShowAddForm(false),\n      employees: employees\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nsloE/9EBkhULYAutqIfOE8Ow4U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EmployeeTable","EmployeeDetails","AddEmployeeForm","OperationButtons","EmployeeService","LoginScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","employees","setEmployees","loading","setLoading","error","setError","filter","setFilter","selectedEmployee","setSelectedEmployee","showAddForm","setShowAddForm","loadingEmployeeId","setLoadingEmployeeId","dateRange","setDateRange","startDate","endDate","notification","setNotification","show","message","type","fetchEmployees","getToday","getMinDate","data","today","minDate","console","log","getEmployeesByHireDate","getActiveEmployees","getAllEmployees","employee","active","err","_err$response","response","status","_err$response2","_err$response2$data","handleViewDetails","id","details","getEmployeeDetails","find","emp","simulatedDetails","directHires","_employee$directRepor","directReports","includes","showNotification","handleStatusChange","currentStatus","deactivateEmployee","activateEmployee","prevEmployees","map","handleDeleteEmployee","window","confirm","deleteEmployee","_err$response3","_err$response3$data","_err$response3$data$m","handleAddEmployee","managerId","allEmployees","some","e","length","invalidReports","join","newEmployee","createEmployee","name","_err$response4","_err$response4$data","errorMessage","Error","setTimeout","prev","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","onDateSearch","onStatusChange","onSort","direction","sortedEmployees","sort","a","b","lastNameA","split","pop","lastNameB","localeCompare","onViewDetails","onDelete","onAddEmployee","employeeDetails","onClose","onSubmit","onCancel","_c","$RefreshReg$"],"sources":["/Users/pradyumnateja/Desktop/flywireassessment/PradyumanaTejaNS-flywire-exercise/reactfrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EmployeeTable from './components/EmployeeTable';\nimport EmployeeDetails from './components/EmployeeDetails';\nimport AddEmployeeForm from './components/AddEmployeeForm';\nimport OperationButtons from './components/OperationButtons';\nimport EmployeeService from './services/EmployeeService';\nimport LoginScreen from './components/LoginScreen';\n\nfunction App() {\n  // State\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [loadingEmployeeId, setLoadingEmployeeId] = useState(null);\n  const [dateRange, setDateRange] = useState({ startDate: null, endDate: null });\n  const [notification, setNotification] = useState({\n    show: false,\n    message: '',\n    type: 'success'\n  });\n\n  // Fetch employees on component mount and filter change\n  useEffect(() => {\n    fetchEmployees();\n  }, [filter, dateRange.startDate, dateRange.endDate]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getToday = () => '2025-04-13';\n  const getMinDate = () => '1925-04-13';\n\n  // Function to fetch employees\n  const fetchEmployees = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      let data;\n      if (dateRange.startDate && dateRange.endDate) {\n        // Validate dates before fetching\n        const today = getToday();\n        const minDate = getMinDate();\n\n        if (dateRange.startDate > today || dateRange.endDate > today) {\n          setError('Cannot search with future dates');\n          setLoading(false);\n          return;\n        }\n\n        if (dateRange.startDate < minDate || dateRange.endDate < minDate) {\n          setError('Dates cannot be more than 100 years in the past');\n          setLoading(false);\n          return;\n        }\n\n        if (dateRange.startDate > dateRange.endDate) {\n          setError('Start date must be before or equal to end date');\n          setLoading(false);\n          return;\n        }\n\n        // If date range is valid, fetch by date range\n        console.log('Fetching with date range:', dateRange);\n        data = await EmployeeService.getEmployeesByHireDate(dateRange.startDate, dateRange.endDate);\n      } else {\n        // Get employees based on active/inactive filter\n        if (filter === 'active') {\n          data = await EmployeeService.getActiveEmployees();\n        } else {\n          data = await EmployeeService.getAllEmployees();\n          // Filter for inactive if needed\n          if (filter === 'inactive') {\n            data = data.filter(employee => !employee.active);\n          }\n        }\n      }\n      \n      if (data) {\n        setEmployees(data);\n        setError(null); // Clear any previous errors if data is received successfully\n      }\n    } catch (err) {\n      console.error('Error fetching employees:', err);\n      if (err.response?.status === 400) {\n        // Don't show error for 400 Bad Request (expected when dates are invalid)\n        setEmployees([]);\n      } else {\n        setError(`Failed to load employees. ${err.response?.data?.message || err.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to view employee details\n  const handleViewDetails = async (id) => {\n    try {\n      const details = await EmployeeService.getEmployeeDetails(id);\n      setSelectedEmployee(details);\n    } catch (err) {\n      console.error('Error fetching employee details:', err);\n      \n      // Handle resourceFile read issues with client-side fallback\n      const employee = employees.find(emp => emp.id === id);\n      if (employee) {\n        // Create a simulated response with the data we have\n        const simulatedDetails = {\n          employee: employee,\n          directHires: employees.filter(emp => \n            employee.directReports?.includes(emp.id) || false\n          )\n        };\n        setSelectedEmployee(simulatedDetails);\n        showNotification(\n          \"Using local data due to backend limitations. Direct reports may not be accurate.\",\n          \"warning\"\n        );\n      } else {\n        setError(`Failed to load employee details: ${err.message}`);\n      }\n    }\n  };\n\n  // Function to handle employee status change\n  const handleStatusChange = async (id, currentStatus) => {\n    try {\n      setLoadingEmployeeId(id);\n      \n      // Call the appropriate service method\n      if (currentStatus) {\n        await EmployeeService.deactivateEmployee(id);\n      } else {\n        await EmployeeService.activateEmployee(id);\n      }\n      \n      setEmployees(prevEmployees =>\n        prevEmployees.map(emp =>\n          emp.id === id ? { ...emp, active: !currentStatus } : emp\n        )\n      );\n      \n      showNotification(\n        `Employee ${currentStatus ? 'deactivated' : 'activated'} successfully`\n      );\n      \n      if (selectedEmployee && selectedEmployee.employee.id === id) {\n        const details = await EmployeeService.getEmployeeDetails(id);\n        setSelectedEmployee(details);\n      }\n      \n      fetchEmployees();\n      \n    } catch (err) {\n      console.error('Error changing employee status:', err);\n      showNotification(err.message, 'error');\n    } finally {\n      setLoadingEmployeeId(null);\n    }\n  };\n\n  const handleDeleteEmployee = async (id) => {\n    console.log('Delete requested for employee ID:', id);\n    \n    if (!window.confirm('Are you sure you want to delete this employee?')) {\n      console.log('Delete cancelled by user for employee ID:', id);\n      return;\n    }\n\n    try {\n      console.log('Starting delete process for employee ID:', id);\n      setLoadingEmployeeId(id); // Show loading state\n      await EmployeeService.deleteEmployee(id);\n      console.log('Successfully deleted employee ID:', id);\n      await fetchEmployees(); // Refresh the list\n      showNotification('Employee deleted successfully');\n    } catch (err) {\n      console.error('Error in handleDeleteEmployee:', err);\n      if (err.response?.data?.message?.includes('Cannot delete original employees')) {\n        showNotification('Cannot delete original employees', 'error');\n      } else {\n        showNotification(`Failed to delete employee: ${err.message}`, 'error');\n      }\n    } finally {\n      setLoadingEmployeeId(null); // Clear loading state\n    }\n  };\n\n  const handleAddEmployee = async (employee, managerId) => {\n    try {\n      // Check if ID is unique\n      const allEmployees = await EmployeeService.getAllEmployees();\n      if (allEmployees.some(e => e.id === employee.id)) {\n        showNotification(`Employee ID ${employee.id} already exists`, 'error');\n        return;\n      }\n\n\n      // Validate direct reports if provided\n      if (employee.directReports.length > 0) {\n        const invalidReports = employee.directReports.filter(\n          id => !allEmployees.some(e => e.id === id)\n        );\n        if (invalidReports.length > 0) {\n          showNotification(\n            `The following direct report IDs do not exist: ${invalidReports.join(', ')}`,\n            'error'\n          );\n          return;\n        }\n      }\n\n      const newEmployee = await EmployeeService.createEmployee(employee, managerId);\n      setShowAddForm(false);\n      fetchEmployees();\n      showNotification(`Employee ${newEmployee.name} added successfully`);\n    } catch (err) {\n      console.error('Error adding employee:', err);\n      const errorMessage = err.response?.data?.message || err.message;\n      throw new Error(errorMessage);  // Re-throw for form handling\n    }\n  };\n\n  const showNotification = (message, type = 'success') => {\n    setNotification({\n      show: true,\n      message,\n      type\n    });\n    \n    setTimeout(() => {\n      setNotification(prev => ({ ...prev, show: false }));\n    }, 5000);\n  };\n\n  if (!isLoggedIn) {\n    return <LoginScreen onLogin={() => setIsLoggedIn(true)} />;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"app-header\">\n        <h1>Employee Management System</h1>\n      </div>\n      \n      <div className=\"header-actions\">\n        <div className=\"filter-buttons\">\n          <div className=\"action-group\">\n            <button \n              className={`filter-btn ${filter === 'all' ? 'active' : ''}`}\n              onClick={() => {\n                setFilter('all');\n                setDateRange({ startDate: null, endDate: null });\n              }}\n            >\n              <i className=\"fas fa-list\"></i> All Employees\n            </button>\n            <button \n              className={`filter-btn ${filter === 'active' ? 'active' : ''}`}\n              onClick={() => {\n                setFilter('active');\n                setDateRange({ startDate: null, endDate: null });\n              }}\n            >\n              <i className=\"fas fa-user-check\"></i> Active Employees\n            </button>\n            <button \n              className={`filter-btn ${filter === 'inactive' ? 'active' : ''}`}\n              onClick={() => {\n                setFilter('inactive');\n                setDateRange({ startDate: null, endDate: null });\n              }}\n            >\n              <i className=\"fas fa-user-times\"></i> Inactive Employees\n            </button>\n          </div>\n          <button onClick={() => setIsLoggedIn(false)} className=\"logout-btn\">\n            <i className=\"fas fa-sign-out-alt\"></i> Logout\n          </button>\n        </div>\n      </div>\n      \n      {/* Notification */}\n      {notification.show && (\n        <div className={`notification ${notification.type}`}>\n          {notification.message}\n          <button onClick={() => setNotification(prev => ({ ...prev, show: false }))}>\n            &times;\n          </button>\n        </div>\n      )}\n      \n      {/* Error message */}\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError(null)}>\n            &times;\n          </button>\n        </div>\n      )}\n      \n      {/* Loading or employee table */}\n      {loading ? (\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n          <p>Loading employees...</p>\n        </div>\n      ) : (\n        <>\n          <OperationButtons\n            onDateSearch={(startDate, endDate) => {\n              setDateRange({ startDate, endDate });\n              fetchEmployees();\n            }}\n            onStatusChange={handleStatusChange}\n            onSort={(direction) => {\n              const sortedEmployees = [...employees].sort((a, b) => {\n                const lastNameA = a.name.split(' ').pop();\n                const lastNameB = b.name.split(' ').pop();\n                return direction === 'asc' \n                  ? lastNameA.localeCompare(lastNameB)\n                  : lastNameB.localeCompare(lastNameA);\n              });\n              setEmployees(sortedEmployees);\n            }}\n            onViewDetails={handleViewDetails}\n            onDelete={handleDeleteEmployee}\n            onAddEmployee={() => setShowAddForm(true)}\n            employees={employees}\n          />\n\n          <EmployeeTable \n            employees={employees} \n          />\n\n          <div className=\"refresh-section\">\n            <button className=\"refresh-btn\" onClick={fetchEmployees}>\n              <i className=\"fas fa-sync-alt\"></i> Refresh\n            </button>\n          </div>\n        </>\n      )}\n      \n      {/* Modal for employee details */}\n      {selectedEmployee && (\n        <EmployeeDetails \n          employeeDetails={selectedEmployee} \n          onClose={() => setSelectedEmployee(null)} \n        />\n      )}\n      \n      {/* Modal for adding employee */}\n      {showAddForm && (\n        <AddEmployeeForm \n          onSubmit={handleAddEmployee}\n          onCancel={() => setShowAddForm(false)}\n          employees={employees}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}